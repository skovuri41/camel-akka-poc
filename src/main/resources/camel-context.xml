<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:akka="http://akka.io/schema/akka"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://akka.io/schema/akka http://akka.io/akka-1.3.1.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd">

	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
	</bean>

	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="maxConnections" value="10" />
		<property name="maximumActive" value="100" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>

	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
		<property name="concurrentConsumers" value="10" />
	</bean>

	<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="configuration" ref="jmsConfig" />
	</bean>


	<!-- bean which ensures the database table is created -->
	<bean id="orderCreateTable" class="org.surya.camel_akka.persister.OrderCreateTable">
		<constructor-arg index="0" ref="camel" />
	</bean>

	<bean id="orderPersister" class="org.surya.camel_akka.persister.OrderPersister">
	</bean>

	<bean id="orderController" class="org.surya.camel_akka.route.processor.OrderController">
		<constructor-arg index="0" ref="orderPersister" />
		<constructor-arg index="1" ref="producerTemplate" />
	</bean>

	<bean id="orderPublisher" class="org.surya.camel_akka.route.processor.OrderPublisher">
		<constructor-arg index="0" ref="producerTemplate" />
	</bean>

	<!-- the transaction manager which is a Spring JDBC TransactionManager -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="myDataSource" />
	</bean>

	<bean id="myDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:ordersds" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean id="orderProcessRoute" class="org.surya.camel_akka.route.OrderProcessRouteBuilder" />

	<camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
		<template id="producerTemplate" />
		<routeBuilder ref="orderProcessRoute" /> 
	</camelContext>

	<akka:camel-service>
		<akka:camel-context ref="camel" />
	</akka:camel-service>

	<akka:dispatcher id="dispatcher-1"
		type="executor-based-event-driven-work-stealing" name="myDispatcher">
		<akka:thread-pool queue="bounded-linked-blocking-queue"
			capacity="10" fairness="true" core-pool-size="10" max-pool-size="20"
			keep-alive="60" rejection-policy="caller-runs-policy" />
	</akka:dispatcher>

	<akka:typed-actor id="orderTaker"
		interface="org.surya.camel_akka.actor.IOrderProcessor" implementation="org.surya.camel_akka.actor.OrderTaker"
		timeout="3000" scope="singleton">
		<akka:dispatcher ref="dispatcher-1" />
	</akka:typed-actor>

	<akka:untyped-actor id="myActor"
		implementation="org.surya.camel_akka.actor.OrderProcessor2" scope="prototype"
		autostart="true">
	</akka:untyped-actor>
</beans>
